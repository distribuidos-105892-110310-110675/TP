name: tp
services:
  rabbitmq-message-middleware:
    image: "rabbitmq:4-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest # @TODO: can be configured in .env
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - custom_net
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  server:
    container_name: server
    image: server:latest
    entrypoint: python3 -m server.main
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - SERVER_PORT=5000
      - SERVER_LISTEN_BACKLOG=5
      - RABBITMQ_HOST=rabbitmq-message-middleware
      - MENU_ITEMS_CL_AMOUNT=2
      - STORES_CL_AMOUNT=2
      - TRANSACTION_ITEMS_CL_AMOUNT=2
      - TRANSACTIONS_CL_AMOUNT=2
      - USERS_CL_AMOUNT=2
    networks:
      - custom_net
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
    depends_on:
      rabbitmq-message-middleware:
        condition: service_healthy

  client:
    container_name: client
    image: client:latest
    entrypoint: python3 -m client.main
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - CLIENT_ID=1
      - SERVER_HOST=server
      - SERVER_PORT=5000
      - DATA_PATH=/data
      - BATCH_MAX_SIZE=1
    networks:
      - custom_net
    volumes:
      - type: bind
        source: ./.data
        target: /data
        read_only: true
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
    depends_on:
      server:
        condition: service_started

networks:
  custom_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
